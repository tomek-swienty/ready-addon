services:
  ready-addon-routing:
    container_name: "ready-addon-routing"
    build:
      context: ./routing
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "${ROUTING_FORWARD_NGINX_PORT:-80}:80"
    depends_on:
      - ready-addon-backend-nginx
      - ready-addon-backend-php
      - ready-addon-backend-redis
      - ready-addon-backend-postgresql
    networks:
      - ready-addon
    restart: unless-stopped

  ready-addon-backend-nginx:
    container_name: "ready-addon-backend-nginx"
    build:
      context: ./backend/dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "${BACKEND_FORWARD_NGINX_PORT:-80}:80"
    volumes:
      - ./backend/src:/var/www/html:delegated
    depends_on:
      - ready-addon-backend-php
      - ready-addon-backend-redis
      - ready-addon-backend-postgresql
    networks:
      - ready-addon
    restart: unless-stopped

  ready-addon-backend-php:
    container_name: "ready-addon-backend-php"
    build:
      context: ./backend/dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "${BACKEND_FORWARD_PHP_PORT:-9000}:9000"
    volumes:
      - ./backend/src:/var/www/html:delegated
      - ./backend/dockerfiles/configs/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - ready-addon
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: backend
      SERVICE_TAGS: dev

  ready-addon-backend-postgresql:
    image: postgres:16.2
    container_name: "ready-addon-backend-postgresql"
    environment:
      POSTGRES_DB: ${BACKEND_DB_DATABASE}
      POSTGRES_USER: ${BACKEND_DB_USERNAME}
      POSTGRES_PASSWORD: ${BACKEND_DB_PASSWORD}
      TZ: Europe/Sarajevo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${BACKEND_DB_DATABASE} -U ${BACKEND_DB_USERNAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./backend/postgresql/data:/var/lib/postgresql/data
      - ./backend/postgresql/logs:/var/log/postgresql
    ports:
      - "${BACKEND_FORWARD_DB_PORT:-5432}:5432"
    networks:
      - ready-addon
    restart: unless-stopped
    shm_size: 128mb

  ready-addon-backend-redis:
    container_name: "ready-addon-backend-redis"
    image: redis:alpine
    ports:
      - "${BACKEND_FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - ./backend/redis/data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
    networks:
      - ready-addon
    restart: unless-stopped

  ready-addon-backend-composer:
    container_name: "ready-addon-backend-composer"
    build:
      context: ./backend/dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./backend/src:/var/www/html
    depends_on:
      - ready-addon-backend-php
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - ready-addon

  ready-addon-backend-artisan:
    container_name: "ready-addon-backend-artisan"
    build:
      context: ./backend/dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./backend/src:/var/www/html:delegated
    depends_on:
      - ready-addon-backend-postgresql
      - ready-addon-backend-redis
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - ready-addon

networks:
  ready-addon:
    driver: bridge