services:
  backend_nginx:
    container_name: "ready_addon_backend_nginx"
    build:
      #context: ./backend/dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9012:80"
    volumes:
      - ../app:/var/www/html:delegated
      - ../mount/nginx/log:/var/log/nginx/
    depends_on:
      - backend_php
      - backend_redis
      - backend_postgresql
    networks:
      - ready_addon
    restart: unless-stopped

  backend_php:
    container_name: "ready_addon_backend_php"
    build:
      #context: ./backend/dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9099:9000"
    volumes:
      - ../app:/var/www/html:delegated
      - ./configs/php.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - ready_addon
    restart: unless-stopped
    tty: true

  backend_postgresql:
    container_name: "ready_addon_backend_postgresql"
    build:
      dockerfile: postgres.dockerfile
    environment:
      POSTGRES_DB: ${BACKEND_DB_DATABASE}
      POSTGRES_USER: ${BACKEND_DB_USERNAME}
      POSTGRES_PASSWORD: ${BACKEND_DB_PASSWORD}
      TZ: Europe/Sarajevo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${BACKEND_DB_DATABASE} -U ${BACKEND_DB_USERNAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ../mount/postgresql/data:/var/lib/postgresql/data
      - ../mount/postgresql/logs:/var/log/postgresql
    ports:
      - "5499:5432"
    networks:
      - ready_addon
    restart: unless-stopped
    shm_size: 128mb

  backend_redis:
    container_name: "ready_addon_backend_redis"
    build:
      dockerfile: redis.dockerfile
    ports:
      - "6479:6379"
    volumes:
      - ../mount/redis/data:/data
      - ../mount/redis/logs:/var/log/redis/
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
    networks:
      - ready_addon
    restart: unless-stopped

  backend_composer:
    container_name: "ready_addon_backend_composer"
    build:
      #context: ./backend/dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ../app:/var/www/html:delegated
    depends_on:
      - backend_php
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - ready_addon

  backend_artisan:
    container_name: "ready_addon_backend_artisan"
    build:
      #context: ./backend/dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ../app:/var/www/html:delegated
    depends_on:
      - backend_postgresql
      - backend_redis
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - ready_addon